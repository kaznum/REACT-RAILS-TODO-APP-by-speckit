name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  backend-test:
    name: "Backend Tests (RSpec)"
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create environment files
        run: |
          cp backend/.env.example backend/.env
          cp frontend/.env.example frontend/.env.local

      - name: Build and start services
        run: docker compose up -d backend

      - name: Setup database
        run: |
          docker compose exec -T backend bundle exec rails db:create RAILS_ENV=test
          docker compose exec -T backend bundle exec rails db:migrate RAILS_ENV=test

      - name: Run backend tests
        run: docker compose exec -T backend bundle exec rspec

      - name: Cleanup
        if: always()
        run: docker compose down -v

  frontend-test:
    name: "Frontend Tests (Jest)"
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create environment files
        run: |
          cp backend/.env.example backend/.env
          cp frontend/.env.example frontend/.env.local

      - name: Build and start services
        run: docker compose up -d frontend

      - name: Run frontend tests
        run: docker compose exec -T frontend npm test -- --watchAll=false

      - name: Cleanup
        if: always()
        run: docker compose down -v

  backend-lint:
    name: "Backend Lint (RuboCop)"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create environment files
        run: |
          cp backend/.env.example backend/.env
          cp frontend/.env.example frontend/.env.local

      - name: Build and start services
        run: docker compose up -d backend

      - name: Setup database
        run: |
          docker compose exec -T backend bundle exec rails db:create RAILS_ENV=test
          docker compose exec -T backend bundle exec rails db:migrate RAILS_ENV=test

      - name: Run backend linting
        run: docker compose exec -T backend bundle exec rubocop

      - name: Cleanup
        if: always()
        run: docker compose down -v

  frontend-lint:
    name: "Frontend Lint (ESLint)"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create environment files
        run: |
          cp backend/.env.example backend/.env
          cp frontend/.env.example frontend/.env.local

      - name: Build and start services
        run: docker compose up -d frontend

      - name: Run frontend linting
        run: docker compose exec -T frontend npm run lint

      - name: Cleanup
        if: always()
        run: docker compose down -v
